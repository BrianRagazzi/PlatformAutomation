resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tags: latest-final

resources:
- name: platform-automation
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: platform-automation

- name: opsman-image
  type: s3
  source:
    access_key_id: ((access_key_id))
    secret_access_key: ((secret_access_key))
    endpoint: ((endpoint))
    bucket: ((binaries_bucket))
    skip_ssl_verification: true
    regexp: "PCF/ops-manager/pcf-vsphere-(.*).ova" #regexp: ((opsman_image_s3_versioned_regexp)) # vsphere ex: pcf-vsphere-(.*).ova


- name: pks-stemcell
  type: s3
  source:
    access_key_id: ((access_key_id))
    secret_access_key: ((secret_access_key))
    endpoint: ((endpoint))
    bucket: ((binaries_bucket))
    skip_ssl_verification: true
    regexp: PCF/stemcells/bosh-stemcell-(.*)-vsphere-esxi-ubuntu-xenial-go_agent\.tgz

- name: pks-product
  type: s3
  source:
    access_key_id: ((access_key_id))
    secret_access_key: ((secret_access_key))
    endpoint: ((endpoint))
    bucket: ((binaries_bucket))
    skip_ssl_verification: true
    regexp: PCF/PKS/pivotal-container-service-(.*).pivotal


- name: harbor-stemcell
  type: s3
  source:
    access_key_id: ((access_key_id))
    secret_access_key: ((secret_access_key))
    endpoint: ((endpoint))
    bucket: ((binaries_bucket))
    skip_ssl_verification: true
    regexp: PCF/stemcells/bosh-stemcell-(.*)-vsphere-esxi-ubuntu-xenial-go_agent\.tgz

- name: harbor-product
  type: s3
  source:
    access_key_id: ((access_key_id))
    secret_access_key: ((secret_access_key))
    endpoint: ((endpoint))
    bucket: ((binaries_bucket))
    skip_ssl_verification: true
    regexp: PCF/Tiles/harbor-container-registry-(.*).pivotal

- name: configuration
  type: git
  source:
    uri: ((config_github_repo))
    branch: ((config_github_branch))
    username: ((github_username))
    password: ((github_token))
    paths: ["environments/((foundation))/config"]

- name: state
  type: git
  source:
    uri: ((config_github_repo))
    branch: ((config_github_branch))
    username: ((github_username))
    password: ((github_token))

jobs:
- name: install-opsman
  serial: true
  serial_groups: [ install ]
  plan:
  - aggregate:
    - get: opsman-image
    - get: configuration
      trigger: true
    - get: state
    - get: platform-automation-image
      resource: platform-automation
      params:
        unpack: true
        globs: ["*image*"]
    - get: platform-automation-tasks
      resource: platform-automation
      params:
        unpack: true
        globs: ["*tasks*"]

  - task: credhub-interpolate
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params: &credhub_interpolate_params
      CREDHUB_CLIENT: ((credhub_client))
      CREDHUB_SECRET: ((credhub_secret))
      CREDHUB_SERVER: ((credhub_server))
      CREDHUB_CA_CERT: ((credhub_ca_cert))
      PREFIX: '/foundation/((foundation))'
      INTERPOLATION_PATH: "environments/((foundation))/config/secrets"
    input_mapping:
      files: configuration

  - task: create-vm
    image: platform-automation-image
    file: platform-automation-tasks/tasks/create-vm.yml
    input_mapping:
      state: state
      config: configuration
      vars: configuration
      secrets: interpolated-files
      image: opsman-image
    params:
      STATE_FILE: state/((foundation))/state.yml
      OPSMAN_CONFIG_FILE: environments/((foundation))/config/templates/opsman.yml
      VARS_FILES: |
        vars/environments/((foundation))/config/defaults/opsman.yml
        vars/environments/((foundation))/config/vars/opsman.yml
        secrets/environments/((foundation))/config/secrets/opsman.yml
        secrets/environments/((foundation))/config/secrets/pivnet.yml

    ensure: &make-state-commit
      do:
        - task: make-commit
          image: platform-automation-image
          file: platform-automation-tasks/tasks/make-git-commit.yml
          input_mapping:
            repository: state
            file-source: generated-state
          output_mapping:
            repository-commit: state-commit
          params:
            FILE_SOURCE_PATH: state.yml
            FILE_DESTINATION_PATH: state/((foundation))/state.yml
            GIT_AUTHOR_EMAIL: ((github_author_email))
            GIT_AUTHOR_NAME: "Platform Automation"
            COMMIT_MESSAGE: 'Update state file'
        - put: state
          params:
            repository: state-commit
            merge: true

  - task: configure-authentication
    image: platform-automation-image
    file: platform-automation-tasks/tasks/configure-authentication.yml
    attempts: 20
    input_mapping:
      env: interpolated-files
      config: interpolated-files
    params:
      ENV_FILE: environments/((foundation))/config/secrets/env.yml
      AUTH_CONFIG_FILE: environments/((foundation))/config/secrets/auth.yml
  - task: configure-director
    image: platform-automation-image
    file: platform-automation-tasks/tasks/configure-director.yml
    input_mapping:
      config: configuration
      env: interpolated-files
      vars: configuration
      secrets: interpolated-files
    params:
      ENV_FILE: environments/((foundation))/config/secrets/env.yml
      DIRECTOR_CONFIG_FILE: environments/((foundation))/config/templates/director.yml
      VARS_FILES: vars/environments/((foundation))/config/vars/director.yml secrets/environments/((foundation))/config/secrets/director.yml

  - task: apply-director-changes
    image: platform-automation-image
    file: platform-automation-tasks/tasks/apply-director-changes.yml
    input_mapping:
      env: interpolated-files
    params:
      ENV_FILE: environments/((foundation))/config/secrets/env.yml


- name: pas
  serial: true
  plan:
  - aggregate:
    - get: configuration
      trigger: true
      passed: [ install-opsman ]
    - get: pks-product
    - get: pks-stemcell
    - get: harbor-stemcell
    - get: platform-automation-image
      resource: platform-automation
      params:
        unpack: true
        globs: ["*image*"]
    - get: platform-automation-tasks
      resource: platform-automation
      params:
        unpack: true
        globs: ["*tasks*"]

  - task: credhub-interpolate
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params: *credhub_interpolate_params
    input_mapping:
      files: configuration

  - task: upload-product-pks
    image: platform-automation-image
    file: platform-automation-tasks/tasks/upload-product.yml
    input_mapping:
      product: pks-product
      config: configuration
      env: interpolated-files
      vars: configuration
      secrets: interpolated-files
    params:
      ENV_FILE: environments/((foundation))/config/secrets/env.yml

  - task: stage-product-pks
    image: platform-automation-image
    file: platform-automation-tasks/tasks/stage-product.yml
    input_mapping:
      product: pks-product
      env: interpolated-files
    params:
      ENV_FILE: environments/((foundation))/config/secrets/env.yml

  - task: upload-pks-stemcell
    image: platform-automation-image
    file: platform-automation-tasks/tasks/upload-stemcell.yml
    input_mapping:
      env: interpolated-files
      stemcell: pks-stemcell
    params:
      ENV_FILE: environments/((foundation))/config/secrets/env.yml

  - task: upload-harbor-stemcell
    image: platform-automation-image
    file: platform-automation-tasks/tasks/upload-stemcell.yml
    input_mapping:
      env: interpolated-files
      stemcell: harbor-stemcell
    params:
      ENV_FILE: environments/((foundation))/config/secrets/env.yml

  - task: configure-pks
    image: platform-automation-image
    file: platform-automation-tasks/tasks/configure-product.yml
    input_mapping:
      config: configuration
      env: interpolated-files
      vars: configuration
      secrets: interpolated-files
    params:
      CONFIG_FILE: environments/((foundation))/config/templates/cf.yml
      VARS_FILES: |
        vars/environments/((foundation))/config/defaults/cf.yml
        vars/environments/((foundation))/config/vars/cf.yml
        secrets/environments/((foundation))/config/secrets/cf.yml
      ENV_FILE: environments/((foundation))/config/secrets/env.yml

- name: harbor
  serial: true
  plan:
  - aggregate:
    - get: harbor-product
    - get: configuration
      trigger: true
      passed: [ pas ]
    - get: platform-automation-image
      resource: platform-automation
      params:
        unpack: true
        globs: ["*image*"]
    - get: platform-automation-tasks
      resource: platform-automation
      params:
        unpack: true
        globs: ["*tasks*"]

  - task: credhub-interpolate
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params: *credhub_interpolate_params
    input_mapping:
      files: configuration

  - task: upload-product-harbor
    image: platform-automation-image
    file: platform-automation-tasks/tasks/upload-product.yml
    input_mapping:
      product: harbor-product
      config: configuration
      download-config: configuration
      env: interpolated-files
      secrets: interpolated-files
    params:
      ENV_FILE: environments/((foundation))/config/secrets/env.yml

  - task: stage-product-harbor
    image: platform-automation-image
    file: platform-automation-tasks/tasks/stage-product.yml
    input_mapping:
      product: harbor-product
      config: configuration
      download-config: configuration
      env: interpolated-files
      secrets: interpolated-files
    params:
      ENV_FILE: environments/((foundation))/config/secrets/env.yml

  - task: configure-harbor
    image: platform-automation-image
    file: platform-automation-tasks/tasks/configure-product.yml
    input_mapping:
      config: configuration
      env: interpolated-files
      vars: configuration
      secrets: interpolated-files
    params:
      CONFIG_FILE: environments/((foundation))/config/templates/p-harbor.yml
      VARS_FILES: |
        vars/environments/((foundation))/config/defaults/p-harbor.yml
        vars/environments/((foundation))/config/vars/p-harbor.yml
        secrets/environments/((foundation))/config/secrets/p-harbor.yml
      ENV_FILE: environments/((foundation))/config/secrets/env.yml

- name: apply-changes
  serial: true
  plan:
  - aggregate:
    - get: configuration
      trigger: false
      passed: [ pas ]
    - get: platform-automation-image
      resource: platform-automation
      params:
        unpack: true
        globs: ["*image*"]
    - get: platform-automation-tasks
      resource: platform-automation
      params:
        unpack: true
        globs: ["*tasks*"]

  - task: credhub-interpolate
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params: *credhub_interpolate_params
    input_mapping:
      files: configuration

  - task: apply-product-changes
    image: platform-automation-image
    file: platform-automation-tasks/tasks/apply-changes.yml
    input_mapping:
      config: configuration
      env: interpolated-files
    params:
      ENV_FILE: environments/((foundation))/config/secrets/env.yml
