---
platform: linux


inputs:
- name: config # contains the base configuration file
- name: env # contains the env file with target OpsMan Information
- name: secrets
  optional: true
#- name: vars
- name: custom-tasks

params:
  #VARS_FILES:
  CONFIG_FILE: base.yml
  ENV_FILE: env.yml
  PKSUAA_CONFIG_FILE: pksuaa.yml
  SKIP_MISSING: true


run:
  path: bash
  args:
  - "-c"
  - |
    set -eu

    source custom-tasks/tasks/functions/uaac.sh

    UAA_URL=$(om interpolate --config "config/$CONFIG_FILE" --skip-missing  --path /properties_pks_api_hostname)

    PKS_GUID=$(om --env env/"${ENV_FILE}" curl --silent --path \
      "/api/v0/deployed/products" | \
      jq -r '.[] | .installation_name' | grep pivotal-container-service | tail -1)

    ADMIN_CLIENT_SECRET=$(om --env env/"${ENV_FILE}" curl --silent --path \
      "/api/v0/deployed/products/${PKS_GUID}/credentials/.properties.pks_uaa_management_admin_client" | \
      jq -rc '.credential.value.secret')

    echo "Connecting to PKS UAA server [$UAA_URL]..."
    # login to PKS UAA
    uaac target https://$UAA_URL:8443 --skip-ssl-validation
    uaac token client get admin --secret $ADMIN_CLIENT_SECRET

    echo "Creating New Local Users"
    Create_Local_users config/$PKSUAA_CONFIG_FILE
    echo "Creating UAA Clients"
    Create_Local_clients config/$PKSUAA_CONFIG_FILE
    echo "Mapping LDAP groups to UAA"
    Group_Members_Maps config/$PKSUAA_CONFIG_FILE
