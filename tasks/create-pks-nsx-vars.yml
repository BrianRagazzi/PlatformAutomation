---
platform: linux


inputs:
- name: config # contains the env file with target OpsMan Information
- name: vars # variable files to be made available
- name: secrets
  optional: true
- name: custom-tasks

outputs:
 - name: vars

params:
  NSXT_INFRA_CONFIG_FILE: pks-vars.yml
  PKS_VARS_FILE: pks-vars.yml
  NSX_VARS_FILE: pks-nsx-vars.yml


run:
  path: bash
  args:
  - "-c"
  - |
    set -eu

    export NSXUSERNAME=$(yq eval '.nsxt_admin_username' $NSXT_INFRA_CONFIG_FILE )
    export NSXPASSWORD=$(yq eval '.nsxt_admin_password' $NSXT_INFRA_CONFIG_FILE )
    export NSXHOSTNAME=$(yq eval '.nsxt_manager' $NSXT_INFRA_CONFIG_FILE )
    #set -eux

    source custom-tasks/tasks/functions/nsxt4.sh
    source custom-tasks/tasks/functions/nsxt-yml.sh


    poolname=$(yq eval '.properties_network_selector_nsx_floating-ip-pool-name' $PKS_VARS_FILE)
    poolid=$(Get_NSX_IP_Pool_ID $poolname)
    podsblockname=$(yq eval '.properties_network_selector_nsx_ip-block-name' $PKS_VARS_FILE)
    podsblockid=$(Get_NSX_IP_Block_ID $podsblockname)

    nodesblockname=$(yq eval '.properties_network_selector_nsx_nodes-ip-block-name' $PKS_VARS_FILE)
    nodesblockid=$(Get_NSX_IP_Block_ID $nodesblockname)
    t0name=$(yq eval '.properties_network_selector_nsx_t0-router-name' $PKS_VARS_FILE)
    t0id=$t0name
    echo "properties_network_selector_nsx_floating-ip-pool-ids: $poolid" >> $NSX_VARS_FILE
    echo "properties_network_selector_nsx_nodes-ip-block-id: $nodesblockid" >> $NSX_VARS_FILE
    echo "properties_network_selector_nsx_ip-block-id: $podsblockid" >> $NSX_VARS_FILE
    echo "properties_network_selector_nsx_t0-router-id: $t0id" >> $NSX_VARS_FILE

    echo "folder:" $(ls -al)
