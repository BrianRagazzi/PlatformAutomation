# The inputs, outputs, params, filename, and filepath
# of this task file are part of its semantically versioned API.
# See our documentation for a detailed discussion of our semver API.
# See www.semver.org for an explanation of semantic versioning.

# code_snippet apply-director-changes start yaml
---
platform: linux


inputs:
- name: env # contains the env file with target OpsMan Information
- name: vars # variable files to be made available
  optional: true
- name: secrets
  # secret files to be made available
  # separate from vars, so they can be store securely
  optional: true

params:
  PAS_ADMIN_USERNAME:
  PAS_ADMIN_PASSWORD:
  PAS_ADMIN_ORG:

  ENV_FILE: env.yml
  # - Required
  # - Filepath of the env config YAML
  # - The path is relative to root of the `env` input

run:
  path: bash
  args:
  - "-c"
  - |
    # cat /var/version && echo ""
    set -eux

    # add dependencies to platform automation image
    curl https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | apt-key add -
    echo "deb https://packages.cloudfoundry.org/debian stable main" | tee /etc/apt/sources.list.d/cloudfoundry-cli.list
    apt-get update
    apt-get install jq cf-cli -y

    CF_GUID=$(om --env env/"${ENV_FILE}" curl --silent --path \
      "/api/v0/deployed/products" | \
      jq -r '.[] | .installation_name' | grep cf- | tail -1)

    SYS_DOMAIN=$(om --env env/"${ENV_FILE}" curl --silent --path \
      "/api/v0/staged/products/${CF_GUID}/properties" | \
      jq --raw-output '.[] | .[".cloud_controller.system_domain"].value')

    ADMIN_PW=$(om --env env/"${ENV_FILE}" curl --silent --path \
      "/api/v0/deployed/products/${CF_GUID}/credentials/.uaa.admin_credentials" | \
      jq -r '.[] | .value.password')

    ADMIN_CLIENT=$(om --env env/"${ENV_FILE}" curl --silent --path \
      "/api/v0/deployed/products/${CF_GUID}/credentials/.uaa.admin_client_credentials" | \
      jq -r '.[] | .value.password')

    cf login -a https://api.$SYS_DOMAIN -u admin -p $ADMIN_PW --skip-ssl-validation -o system -s system

    cf create-org $PAS_ADMIN_ORG

    cf create-user $PAS_ADMIN_USERNAME $PAS_ADMIN_PASSWORD
    cf set-org-role $PAS_ADMIN_USERNAME $PAS_ADMIN_ORG OrgManager
    cf set-org-role $PAS_ADMIN_USERNAME $PAS_ADMIN_ORG BillingManager
    cf set-org-role $PAS_ADMIN_USERNAME $PAS_ADMIN_ORG OrgAuditor

    cf logout


# code_snippet add_pass_admin end
