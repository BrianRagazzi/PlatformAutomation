---
# code_snippet multiple-product-interpolate-creds start yaml
# This task is used in multiple jobs
# The yaml anchor "*interpolate-creds" is used in its place
credhub-interpolate: &credhub-interpolate
  image: platform-automation-vsphere-image
  file: platform-automation-tasks/tasks/credhub-interpolate.yml
  params:
    CREDHUB_CLIENT: ((credhub_client))
    CREDHUB_SECRET: ((credhub_secret))
    CREDHUB_SERVER: ((credhub_server))
    CREDHUB_CA_CERT: ((credhub_ca_cert))
    PREFIX: '/concourse/((foundation))'
    #INTERPOLATION_PATHS: "((foundation))/env ((foundation))/vars"
    INTERPOLATION_PATHS: "((foundation))/vars"
    SKIP_MISSING: true
  input_mapping:
    files: config
  # output_mapping:
  #   interpolated-files: config
  output_mapping:
    interpolated-files: interpolated-creds

s3_credentials_binaries: &s3_credentials_binaries
  access_key_id: ((s3_access_key_id))
  secret_access_key: ((s3_secret_access_key))
  endpoint: ((s3_endpoint))
  bucket: ((s3_buckets_pivnet_products))
  region_name: ((s3_region_name))
  skip_ssl_verification: true

resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

resources:
- name: platform-automation-tasks
  type: s3
  source:
    <<: *s3_credentials_binaries
    regexp: platform-automation-tasks-(.*).zip

- name: platform-automation-vsphere-image
  type: s3
  source:
    <<: *s3_credentials_binaries
    regexp: vsphere-platform-automation-image-(.*).tar.gz

- name: custom-task-image
  type: registry-image
  source:
    repository: ((registry_endpoint))/((registry_repo))
    #username: ((registry_username))
    #password: ((registry_password))
    tag: 'latest'
    insecure: true
    # ca_certs:
    # - ((registry_ca_cert))

- name: config
  type: git
  source:
    uri: ((config_github_repo))
    branch: ((config_github_branch))
    username: ((github_username))
    password: ((github_token))
    paths: ["((foundation))"]

- name: custom-tasks
  type: git
  source:
    uri: ((PlatformAutomation_github_repo))
    branch: ((PlatformAutomation_github_branch))
    username: ((github_username))
    password: ((github_token))
    paths: ["tasks"]


jobs:
- name: create-nsx-objects
  serial: true
  build_log_retention:
    builds: 4
  serial_groups: [ install ]
  plan:
  - get: config
  - get: custom-tasks
  - get: custom-task-image
  - get: platform-automation-vsphere-image
    params:
      unpack: true
  - get: platform-automation-tasks
    params:
      unpack: true

  - task: credhub-interpolate
    <<: *credhub-interpolate

  - task: create-objects
    image: custom-task-image
    file: custom-tasks/tasks/configure-nsxt-infra.yml
    input_mapping:
      config: config
      vars: interpolated-creds
      custom-tasks: custom-tasks
    params:
      NSXT_INFRA_CONFIG_FILE: vars/((foundation))/vars/nsx-infra.yml

- name: nsx-pi
  serial: true
  build_log_retention:
    builds: 2
  plan:
  - get: config
    trigger: true
  - get: custom-tasks
  - get: custom-task-image

  - task: credhub-interpolate
    <<: *credhub-interpolate

  - task: get_nsx_vars #necessary to obtain the obectids for NSX
    image: custom-task-image
    file: custom-tasks/tasks/create-pks-nsx-vars.yml
    input_mapping:
      config: config
      vars: interpolated-creds
      custom-tasks: custom-tasks
    params:
      NSXT_INFRA_CONFIG_FILE: vars/((foundation))/vars/nsx-infra.yml
      PKS_VARS_FILE: vars/((foundation))/vars/tkgi-vars.yml
      NSX_VARS_FILE:  vars/((foundation))/vars/tkgi-nsx-vars.yml
    output_mapping:
      vars: interpolated-creds


- name: delete-nsx-objects
  serial: true
  build_log_retention:
    builds: 4
  serial_groups: [ install ]
  plan:
  - get: config
  - get: custom-tasks
  - get: custom-task-image
  - get: platform-automation-vsphere-image
    params:
      unpack: true
  - get: platform-automation-tasks
    params:
      unpack: true

  - task: credhub-interpolate
    <<: *credhub-interpolate

  - task: delete-objects
    image: custom-task-image
    file: custom-tasks/tasks/delete-nsxt-infra.yml
    input_mapping:
      config: config
      vars: interpolated-creds
      custom-tasks: custom-tasks
    params:
      NSXT_INFRA_CONFIG_FILE: vars/((foundation))/vars/nsx-infra.yml
