---
s3_credentials_binaries: &s3_credentials_binaries
  access_key_id: ((access_key_id))
  secret_access_key: ((secret_access_key))
  endpoint: ((s3.endpoint))
  bucket: ((s3.buckets_pivnet_products))
  region_name: ((s3.region_name))
  skip_ssl_verification: true


resources:

- name: platform-automation-image
  type: s3
  source:
    <<: *s3_credentials_binaries
    regexp: platform-automation-image-(.*).tgz

- name: minio-release
  type: bosh-io-release
  source:
    repository: minio/minio-boshrelease

- name: concourse-release
  type: bosh-io-release
  source:
    repository: concourse/concourse-bosh-release

- name: minio-s3
  type: s3
  source:
    access_key_id: ((s3.access_key_id))
    bucket: ((s3.buckets_pivnet_products))
    region_name: ((s3.region_name))
    endpoint: ((s3.endpoint))
    skip_ssl_verification: true
    secret_access_key: ((s3.secret_access_key))
    regexp: bosh-releases/minio/minio-boshrelease-(.*).tgz

- name: concourse-s3
  type: s3
  source:
    access_key_id: ((s3.access_key_id))
    bucket: ((s3.buckets_pivnet_products))
    region_name: ((s3.region_name))
    endpoint: ((s3.endpoint))
    skip_ssl_verification: true
    skip_download: true
    secret_access_key: ((s3.secret_access_key))
    regexp: bosh-releases/concourse/concourse-bosh-release-(.*).tgz

jobs:
- name: get-minio
  build_logs_to_retain: 2
  plan:
  - get: release
    resource: minio-release
    params:
      tarball: true
  - get: platform-automation-image
    params:
      unpack: true
  - task: rename-file
    image: platform-automation-image
    config:
      platform: linux
      run:
        path: sh
        args:
        - -exc
        - |
          ls -al
          mv release/release.tgz release/minio-boshrelease-$(cat release/version).tgz
      inputs:
      - name: release
      outputs:
      - name: release
  - put: minio-s3
    get_params: {skip_download: "true"}
    params:
      file: "release/*.tgz"

- name: get-concourse
  build_logs_to_retain: 2
  plan:
  - get: release
    resource: concourse-release
    params:
      tarball: true
  - get: platform-automation-image
    params:
      unpack: true
  - task: rename-file
    image: platform-automation-image
    config:
      platform: linux
      run:
        path: sh
        args:
        - -exc
        - |
          ls -al
          mv release/release.tgz release/concourse-bosh-release-$(cat release/version).tgz
      inputs:
      - name: release
      outputs:
      - name: release
  - put: concourse-s3
    get_params: {skip_download: "true"}
    params:
      file: "release/*.tgz"
