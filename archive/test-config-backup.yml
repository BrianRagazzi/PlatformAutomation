---
# code_snippet multiple-product-interpolate-creds start yaml
# This task is used in multiple jobs
# The yaml anchor "*interpolate-creds" is used in its place
interpolate-creds: &interpolate-creds
  image: platform-automation-image
  file: platform-automation-tasks/tasks/credhub-interpolate.yml
  params:
    CREDHUB_CLIENT: ((credhub_client))
    CREDHUB_SECRET: ((credhub_secret))
    CREDHUB_SERVER: ((credhub_server))
    CREDHUB_CA_CERT: ((credhub_ca_cert))
    PREFIX: '/foundation/((foundation))'
    INTERPOLATION_PATHS: "((foundation))/env ((foundation))/vars"
    SKIP_MISSING: true
  input_mapping:
    files: configuration
  output_mapping:
    interpolated-files: interpolated-creds

s3_credentials_binaries: &s3_credentials_binaries
  access_key_id: ((access_key_id))
  secret_access_key: ((secret_access_key))
  endpoint: ((s3.endpoint))
  bucket: ((s3.buckets_pivnet_products))
  region_name: ((s3.region_name))
  skip_ssl_verification: true


resources:

- name: platform-automation-tasks
  type: s3
  source:
    <<: *s3_credentials_binaries
    regexp: platform-automation-tasks-(.*).zip

- name: platform-automation-image
  type: s3
  source:
    <<: *s3_credentials_binaries
    regexp: platform-automation-image-(.*).tgz

- name: config-backup
  type: s3
  source:
    access_key_id: ((access_key_id))
    secret_access_key: ((secret_access_key))
    endpoint: ((s3.endpoint))
    bucket: ((s3.buckets_backup_bucket)) #Different Bucket
    skip_ssl_verification: true
    regexp: ((foundation))/(.*).yml

- name: configuration
  type: git
  source:
    uri: ((config_github_repo))
    branch: ((config_github_branch))
    username: ((github_username))
    password: ((github_token))
    paths: ["((foundation))"]


jobs:
- name: staged-director-config-backup
  plan:
  - get: platform-automation-tasks
    params: {unpack: true}
    trigger: true
  - get: platform-automation-image
    params: {unpack: true}
  - get: configuration
  - task: interpolate-creds
    <<: *interpolate-creds
  - task: staged-director-config
    image: platform-automation-image
    file: platform-automation-tasks/tasks/staged-director-config.yml
    input_mapping:
      env: interpolated-creds
    params:
      ENV_FILE: ((foundation))/env/env.yml
  - put: config-backup
    params:
      file: generated-config/*.yml

- name: staged-config-pas-backup
  plan:
  - get: platform-automation-tasks
    params: {unpack: true}
    trigger: true
  - get: platform-automation-image
    params: {unpack: true}
  - get: configuration
  - task: interpolate-creds
    <<: *interpolate-creds
  - task: staged-pas-config
    image: platform-automation-image
    file: platform-automation-tasks/tasks/staged-config.yml
    input_mapping:
      env: interpolated-creds
    params:
      PRODUCT_NAME: cf
      ENV_FILE: ((foundation))/env/env.yml
  - put: config-backup
    params:
      file: generated-config/*.yml

- name: staged-config-pasw-backup
  plan:
  - get: platform-automation-tasks
    params: {unpack: true}
    trigger: true
  - get: platform-automation-image
    params: {unpack: true}
  - get: configuration
  - task: interpolate-creds
    <<: *interpolate-creds
  - task: staged-pas-config
    image: platform-automation-image
    file: platform-automation-tasks/tasks/staged-config.yml
    input_mapping:
      env: interpolated-creds
    params:
      PRODUCT_NAME: pas-windows
      ENV_FILE: ((foundation))/env/env.yml
  - put: config-backup
    params:
      file: generated-config/*.yml

- name: staged-config-healthwatch-backup
  plan:
  - get: platform-automation-tasks
    params: {unpack: true}
    trigger: true
  - get: platform-automation-image
    params: {unpack: true}
  - get: configuration
  - task: interpolate-creds
    <<: *interpolate-creds
  - task: staged-pas-config
    image: platform-automation-image
    file: platform-automation-tasks/tasks/staged-config.yml
    input_mapping:
      env: interpolated-creds
    params:
      PRODUCT_NAME: p-healthwatch
      ENV_FILE: ((foundation))/env/env.yml
  - put: config-backup
    params:
      file: generated-config/*.yml

- name: staged-config-nsxt-backup
  plan:
  - get: platform-automation-tasks
    params: {unpack: true}
    trigger: true
  - get: platform-automation-image
    params: {unpack: true}
  - get: configuration
  - task: interpolate-creds
    <<: *interpolate-creds
  - task: staged-pas-config
    image: platform-automation-image
    file: platform-automation-tasks/tasks/staged-config.yml
    input_mapping:
      env: interpolated-creds
    params:
      PRODUCT_NAME: VMware-NSX-T
      ENV_FILE: ((foundation))/env/env.yml
  - put: config-backup
    params:
      file: generated-config/*.yml
