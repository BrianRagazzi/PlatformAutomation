resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tags: latest-final

resources:
- name: platform-automation
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: platform-automation


- name: opsman-image
  type: s3
  source:
    access_key_id: ((access_key_id))
    secret_access_key: ((secret_access_key))
    endpoint: ((s3.endpoint))
    bucket: ((s3.buckets_pivnet_products))
    skip_ssl_verification: true
    regexp: \[ops-manager,(.*)\].*.ova #regexp: ((opsman_image_s3_versioned_regexp)) # vsphere ex: pcf-vsphere-(.*).ova

- name: configuration
  type: git
  source:
    uri: ((config_github_repo))
    branch: ((config_github_branch))
    username: ((github_username))
    password: ((github_token))
    paths: ["((foundation))"]

- name: state
  type: git
  source:
    uri: ((config_github_repo))
    branch: ((config_github_branch))
    username: ((github_username))
    password: ((github_token))

# - name: custom-tasks
#   type: git
#   source:
#     uri: ((config_github_repo))
#     branch: ((config_github_branch))
#     username: ((github_username))
#     password: ((github_token))

- name: installation
  type: s3
  source:
    access_key_id: ((access_key_id))
    secret_access_key: ((secret_access_key))
    endpoint: ((s3.endpoint))
    bucket: ((s3.buckets_backup_bucket))
    skip_ssl_verification: true
    regexp: ((foundation))/installation-(.*).zip

- name: one-time-trigger
  type: time
  source:
    interval: 999999h

- name: daily-trigger
  type: time
  source:
    interval: 24h

# code_snippet multiple-product-interpolate-creds start yaml
# This task is used in multiple jobs
# The yaml anchor "*interpolate-creds" is used in its place
interpolate-creds: &interpolate-creds
  image: platform-automation-image
  file: platform-automation-tasks/tasks/credhub-interpolate.yml
  params:
    CREDHUB_CLIENT: ((credhub_client))
    CREDHUB_SECRET: ((credhub_secret))
    CREDHUB_SERVER: ((credhub_server))
    CREDHUB_CA_CERT: ((credhub_ca_cert))
    PREFIX: '/foundation/((foundation))'
    INTERPOLATION_PATHS: "((foundation))/env ((foundation))/vars download-product-configs"
    SKIP_MISSING: true
  input_mapping:
    files: configuration
  output_mapping:
    interpolated-files: interpolated-creds


jobs:
 - name: export-installation
   serial: true
   plan:
     - aggregate:
         - get: one-time-trigger
         - get: daily-trigger
           trigger: true
         - get: platform-automation-image
           resource: platform-automation
           params:
             unpack: true
             globs: ["*image*"]
         - get: platform-automation-tasks
           resource: platform-automation
           params:
             unpack: true
             globs: ["*tasks*"]
         - get: configuration
     - task: interpolate-creds
       <<: *interpolate-creds
     - task: export-installation
       image: platform-automation-image
       file: platform-automation-tasks/tasks/export-installation.yml
       input_mapping:
         env: interpolated-creds
       params:
         ENV_FILE: ((foundation))/env/env.yml
         INSTALLATION_FILE: installation-$timestamp.zip
     - put: installation
       params:
         file: installation/installation*.zip

 - name: upgrade-opsman
   serial: true
   serial_groups: [ upgrade-opsman ]
   plan:
     - aggregate:
         - get: opsman-image
         - get: one-time-trigger
           passed: [ export-installation ]
         - get: platform-automation-image
           resource: platform-automation
           params:
             unpack: true
             globs: ["*image*"]
         - get: platform-automation-tasks
           resource: platform-automation
           params:
             unpack: true
             globs: ["*tasks*"]
         - get: installation
           passed: [ export-installation ]
         - get: configuration
     - task: interpolate-creds
       <<: *interpolate-creds
     - task: download-opsman-image
       image: platform-automation-image
       file: platform-automation-tasks/tasks/download-product-s3.yml
       params:
         CONFIG_FILE: download-product-configs/opsman.yml
       input_mapping:
         config: interpolated-creds
       output_mapping:
         downloaded-product: opsman-image
     - task: upgrade-opsman
       image: platform-automation-image
       file: platform-automation-tasks/tasks/upgrade-opsman.yml
       input_mapping:
         image: opsman-image
         state: configuration
         config: interpolated-creds
         env: interpolated-creds
       params:
         VARS_FILES: ((foundation))/vars/opsman-default.yml ((foundation))/vars/opsman-vars .yml
         ENV_FILE: ((foundation))/env/env.yml
         OPSMAN_CONFIG_FILE: (foundation))/config/opsman.yml
         STATE_FILE: ((foundation))/state/state.yml
       ensure: &make-state-commit
         do:
           - task: make-commit
             image: platform-automation-image
             file: platform-automation-tasks/tasks/make-git-commit.yml
             input_mapping:
               repository: state
               file-source: generated-state
             output_mapping:
               repository-commit: state-commit
             params:
               FILE_SOURCE_PATH: state.yml
               FILE_DESTINATION_PATH: ((foundation))/state/state.yml
               GIT_AUTHOR_EMAIL: ((github_author_email))
               GIT_AUTHOR_NAME: "Platform Automation"
               COMMIT_MESSAGE: 'Update state file'
           - put: state
             params:
               repository: state-commit
               merge: true
     - task: configure-director
       image: platform-automation-image
       file: platform-automation-tasks/tasks/configure-director.yml
       input_mapping:
         config: configuration
         env: interpolated-files
         vars: interpolated-files
       params:
         ENV_FILE: ((foundation))/env/env.yml
         DIRECTOR_CONFIG_FILE: (foundation))/config/director.yml
         VARS_FILES: ((foundation))/vars/director-defaults.yml ((foundation))/vars/director-vars.yml

     - task: apply-director-changes
       image: platform-automation-image
       file: platform-automation-tasks/tasks/apply-director-changes.yml
       input_mapping:
         env: interpolated-files
       params:
         ENV_FILE: ((foundation))/env/env.yml
