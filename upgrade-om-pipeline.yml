# code_snippet multiple-product-interpolate-creds start yaml
# This task is used in multiple jobs
# The yaml anchor "*interpolate-creds" is used in its place
interpolate-creds: &interpolate-creds
  image: platform-automation-image
  file: platform-automation-tasks/tasks/credhub-interpolate.yml
  params:
    CREDHUB_CLIENT: ((credhub_client))
    CREDHUB_SECRET: ((credhub_secret))
    CREDHUB_SERVER: ((credhub_server))
    CREDHUB_CA_CERT: ((credhub_ca_cert))
    PREFIX: '/foundation/((foundation))'
    INTERPOLATION_PATHS: "((foundation))/env ((foundation))/vars"
    SKIP_MISSING: true
  input_mapping:
    files: configuration
  output_mapping:
    interpolated-files: interpolated-creds

s3_credentials_binaries: &s3_credentials_binaries
  access_key_id: ((access_key_id))
  secret_access_key: ((secret_access_key))
  endpoint: ((s3.endpoint))
  bucket: ((s3.buckets_pivnet_products))
  region_name: ((s3.region_name))
  skip_ssl_verification: true


resource_types:


resources:
- name: platform-automation-tasks
  type: s3
  source:
    <<: *s3_credentials_binaries
    regexp: platform-automation-tasks-(.*).zip

- name: platform-automation-image
  type: s3
  source:
    <<: *s3_credentials_binaries
    regexp: platform-automation-image-(.*).tgz

- name: opsman-image
  type: s3
  source:
    <<: *s3_credentials_binaries
    regexp: \[ops-manager,(.*)\].*.ova #regexp: ((opsman_image_s3_versioned_regexp)) # vsphere ex: pcf-vsphere-(.*).ova


- name: configuration
  type: git
  source:
    uri: ((config_github_repo))
    branch: ((config_github_branch))
    username: ((github_username))
    password: ((github_token))
    paths: ["((foundation))"]

- name: state
  type: git
  source:
    uri: ((config_github_repo))
    branch: ((config_github_branch))
    username: ((github_username))
    password: ((github_token))

# - name: custom-tasks
#   type: git
#   source:
#     uri: ((config_github_repo))
#     branch: ((config_github_branch))
#     username: ((github_username))
#     password: ((github_token))

- name: installation
  type: s3
  source:
    access_key_id: ((access_key_id))
    secret_access_key: ((secret_access_key))
    endpoint: ((s3.endpoint))
    bucket: ((s3.buckets_backup_bucket))
    skip_ssl_verification: true
    regexp: ((foundation))/installation-(.*).zip

- name: one-time-trigger
  type: time
  source:
    interval: 999999h

- name: daily-trigger
  type: time
  source:
    interval: 24h


jobs:
 - name: export-installation
   serial: true
   plan:
     - aggregate:
         - get: one-time-trigger
         - get: daily-trigger
           trigger: true
         - get: platform-automation-image
           params:
             unpack: true
         - get: platform-automation-tasks
           params:
             unpack: true
         - get: configuration
     - task: interpolate-creds
       <<: *interpolate-creds
     - task: export-installation
       image: platform-automation-image
       file: platform-automation-tasks/tasks/export-installation.yml
       input_mapping:
         env: interpolated-creds
       params:
         ENV_FILE: ((foundation))/env/env.yml
         INSTALLATION_FILE: installation-$timestamp.zip
     - put: installation
       params:
         file: installation/installation*.zip

 - name: upgrade-opsman
   plan:
     - aggregate:
         - get: opsman-image
         - get: state
         - get: one-time-trigger
           passed: [ export-installation ]
         - get: platform-automation-image
           params:
             unpack: true
         - get: platform-automation-tasks
           params:
             unpack: true
         - get: installation
           passed: [ export-installation ]
           trigger: false
         - get: configuration

     - task: interpolate-creds
       <<: *interpolate-creds

     - task: upgrade-opsman
       image: platform-automation-image
       file: platform-automation-tasks/tasks/upgrade-opsman.yml
       input_mapping:
         state: state
         config: interpolated-creds
         image: opsman-image
         env: interpolated-creds
         vars: interpolated-creds
         installation: installation
       params:
         INSTALLATION_FILE: installation*.zip
         VARS_FILES: vars/((foundation))/vars/opsman-defaults.yml vars/((foundation))/vars/opsman-vars.yml
         ENV_FILE: ((foundation))/env/env.yml
         OPSMAN_CONFIG_FILE: ((foundation))/config/opsman.yml
         STATE_FILE: ((foundation))/state/state.yml



 - name: apply-changes
   serial: true
   plan:
   - aggregate:
     - get: configuration
       trigger: true
       passed: [ upgrade-opsman ]
     - get: platform-automation-image
       params:
         unpack: true
     - get: platform-automation-tasks
       params:
         unpack: true

   - task: interpolate-creds
     <<: *interpolate-creds

   - task: apply-product-changes
     image: platform-automation-image
     file: platform-automation-tasks/tasks/apply-changes.yml
     input_mapping:
       config: configuration
       env: interpolated-creds
     params:
       ENV_FILE: ((foundation))/env/env.yml
